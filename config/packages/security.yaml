security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
         our_db_provider:
            entity:
                class: App\Entity\User
        #  property: username
               
                   
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            user_checker: App\Security\UserChecker
            security: false

        # main:
            # anonymous: true
            # provider: our_db_provider
            # form_login:
                # login_path: login
                # check_path: login


        secured_area:
            form_login:
                login_path: login
                check_path: login

            logout:
                path: /logout
                target: /

            provider: our_db_provider
            anonymous: ~
            oauth:
                resource_owners:
                    facebook:           "/login/check-facebook"
                login_path:        /login
                use_forward:       false
                failure_path:      /login

                oauth_user_provider:
                   service: hwi_oauth.user.provider.entity
               
            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    role_hierarchy:
        ROLE_ADMIN: ROLE_MODERATOR
        ROLE_MODERATOR: ROLE_USER
        
    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/moderator, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

